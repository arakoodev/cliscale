runnerImage: ""

#### 1. Controller Deployment #################
controller:
  replicaCount: 2
  image:
    repository: us-central1-docker.pkg.dev/cliscale/apps/controller
    pullPolicy: Always
    tag: "latest"
  # imagePullSecrets: 
  #   - name: ""
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: "ws-cli-controller"
  service:
    type: ClusterIP
    containerPort: 8080
    port: 80
  resources:
    requests:
      memory: "200Mi"
      cpu: "100m"
    limits:
      memory: "500Mi"
      cpu: "300m"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 80
      - type: Resource
        resource:
          name: memory
          target:
            type: Utilization
            averageUtilization: 75
  volumes:
    - name: jwt-keys
      secret:
        secretName: jwt
    # - name: pg-ca
    #   secret:
    #     secretName: pg-ca
  volumeMounts:
    - name: jwt-keys
      mountPath: /run/secrets/jwt
      readOnly: true
    # - name: pg-ca
    #   mountPath: /etc/ssl/certs/pg
    #   readOnly: true

  # -- Liveness and readiness probes
  livenessProbe: 
    httpGet:
      path: /healthz
      port: 8080
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /readyz
      port: 8080
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 10  

  runnerImage: true
  runnerImageURL: ""

  env:
    - name: JOB_TTL_SECONDS
      value: 300
    - name: JOB_ACTIVE_DEADLINE_SECONDS
      value: 3600
    - name: JWT_PRIVATE_KEY_PATH
      value: "/run/secrets/jwt/private.pem"
    - name: ALLOWED_ORIGINS
      value: '*'
    - name: ALLOWED_CODE_DOMAINS
      value: "github.com,gitlab.com,*.github.com"
    - name: NODE_ENV
      value: "production"
    - name: DB_MAX_CONNECTIONS
      value: 20
    - name: DB_IDLE_TIMEOUT_MILLIS
      value: "30000"

  secretEnvs:
    - name: DATABASE_URL  
      secretName: "pg"       
      secretKey: DATABASE_URL      
    - name: API_KEY    
      secretName: "cliscale-api-key" 
      secretKey: API_KEY

#### 2. Gateway deployment #######################################
gateway:
  replicaCount: 3
  image:
    repository: us-central1-docker.pkg.dev/cliscale/apps/gateway
    pullPolicy: Always
    tag: "latest"
  # imagePullSecrets:
  #   - name: ""
  nameOverride: ""
  fullnameOverride: ""
  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: "ws-cli-gateway"

  service:
    type: ClusterIP
    containerPort: 8080
    port: 80

  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "1"

  # volumes:
  #   - name: pg-ca
  #     secret:
  #       secretName: pg-ca
  # volumeMounts:
  #   - name: pg-ca
  #     mountPath: /etc/ssl/certs/pg
  #     readOnly: true

  livenessProbe:
    httpGet:
      path: /healthz
      port: 8080
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 20
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /healthz
      port: 8080
      scheme: HTTP
    initialDelaySeconds: 5
    periodSeconds: 10

  env:
    - name: PORT
      value: "8080"
    - name: CONTROLLER_URL
      value: http://cliscale-controller.ws-cli.svc.cluster.local
    - name: LOG_LEVEL
      value: info
    - name: DB_MAX_CONNECTIONS
      value: "20"
    - name: DB_IDLE_TIMEOUT_MILLIS
      value: "30000"

  secretEnvs:
    - name: DATABASE_URL  
      secretName: "pg"       
      secretKey: DATABASE_URL 


### 3. Ingress network ##################################
ingresses:
  - enabled: true
    name: cliscale-ingress
    className: "gce"
    annotations:
      kubernetes.io/ingress.allow-http: "true"
      kubernetes.io/ingress.class: "gce"
    tls: {}
    rules:
      - host: ""
        paths:
          - path: /ws
            pathType: Prefix
            service:
              name: cliscale-gateway
              port: 80
          - path: /api
            pathType: Prefix
            service:
              name: cliscale-controller
              port: 80


#### 4. RBAC (role base access control) #############
components:
  controller:
    serviceAccount:
      create: false
      name: ws-cli-controller
    rbac:
      create: true
      rules:
        - apiGroups: ["batch"]
          resources: ["jobs"]
          verbs: ["get", "list", "create", "delete", "watch"]
        - apiGroups: [""]
          resources: ["pods", "pods/log"]
          verbs: ["get", "list", "watch"]

