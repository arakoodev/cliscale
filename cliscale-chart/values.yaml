# Default values for cliscale-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Global settings
namespace: "ws-cli"

db:
  maxConnections: 20
  idleTimeoutMillis: 30000

# -- Database migrations configuration
# Migrations run automatically via Helm hooks before install/upgrade
# This is safe to run multiple times - Knex tracks which migrations have been applied
migrations:
  # -- Enable automatic migrations via Helm hooks
  enabled: true
  # -- Knex environment to use (production, staging, development)
  knexEnv: "production"
  # -- Number of retry attempts if migration fails
  backoffLimit: 3
  # -- Resource requests/limits for migration job
  resources:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"

# -- API key for authentication (set via secret)
# Leave empty to require manual secret creation
apiKey: ""

# -- Ingress configuration
# Creates a single GCE load balancer that routes by path:
#   - /api/* → controller (HTTP REST API)
#   - /ws/* → gateway (serves xterm.js HTML + handles WebSocket connections)
#   - /.well-known/* → controller (JWKS endpoint)
# Access via load balancer IP (no domain required!)
# Example: http://34.120.45.67/api/sessions
ingress:
  enabled: true
  # Optional: Set a hostname if you want to use a domain (not required!)
  # Leave empty to use IP address only
  hostname: ""
  tls:
    # Only enable if you have a domain and TLS certificate
    enabled: false
    secretName: ""

# -- Controller specific configuration
controller:
  replicaCount: 2
  image:
    repository: ""
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: ""
  runnerImage: ""
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "ws-cli-controller"
    gcpServiceAccount: ""
  pdb:
    minAvailable: 1
  hpa:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    cpuAverageUtilization: 80
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"
  env:
    jobTtlSeconds: "300"
    jobActiveDeadlineSeconds: "3600"
    allowedOrigins: "*"
    allowedCodeDomains: "github.com,gitlab.com,*.github.com"
    nodeEnv: "production"
    # Runner configuration passed to Job pods
    exitOnJob: "true"  # Set to "false" to keep runner pods alive after command completes
  # -- Secret names for existing secrets
  secrets:
    databaseUrl: "pg"
    jwt: "jwt"

# -- Gateway specific configuration
gateway:
  replicaCount: 3
  image:
    repository: ""
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: ""
  pdb:
    minAvailable: 2
  serviceAccount:
    gcpServiceAccount: ""
  hpa:
    enabled: true
    minReplicas: 3
    maxReplicas: 20
    cpuAverageUtilization: 80
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "1000m"
      memory: "512Mi"
  env:
    logLevel: "info"
  backendConfig:
    enabled: true
    timeoutSec: 3600
    drainingTimeoutSec: 60
  # -- Secret names for existing secrets
  secrets:
    databaseUrl: "pg"

# -- CloudSQL Proxy sidecar configuration (shared between controller and gateway)
cloudsql:
  enabled: true
  image: "gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.8.0"
  # -- The connection name of the Cloud SQL instance. This should be populated by Terraform.
  instanceConnectionName: ""
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"

# -- RBAC configuration
rbac:
  # -- Specifies whether RBAC resources should be created
  create: true

# -- Optional resources
resourceQuota:
  enabled: true
  pods: "100"
  requestsCpu: "50"
  limitsCpu: "100"
  requestsMemory: "50Gi"
  limitsMemory: "100Gi"

limitRange:
  enabled: true
  # -- Default pod limits
  pod:
    max:
      cpu: "2"
      memory: "2Gi"
    min:
      cpu: "50m"
      memory: "64Mi"
    default:
      cpu: "500m"
      memory: "512Mi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
  # -- Default container limits
  container:
    max:
      cpu: "2"
      memory: "2Gi"
    min:
      cpu: "50m"
      memory: "64Mi"
    default:
      cpu: "500m"
      memory: "512Mi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
