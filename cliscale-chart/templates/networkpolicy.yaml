# Default deny all ingress to runner pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "cliscale.fullname" . }}-runner-deny-ingress
  namespace: {{ .Values.namespace }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cliscale.name" . }}-runner
  policyTypes:
    - Ingress
  ingress: []

---
# Allow ingress to runner only from gateway
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "cliscale.fullname" . }}-runner-allow-gateway
  namespace: {{ .Values.namespace }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cliscale.name" . }}-runner
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: gateway
      ports:
        - protocol: TCP
          port: 7681

---
# Restrict runner egress
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "cliscale.fullname" . }}-runner-egress
  namespace: {{ .Values.namespace }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cliscale.name" . }}-runner
  policyTypes:
    - Egress
  egress:
    # Allow DNS
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - protocol: UDP
          port: 53

    # Allow HTTPS to the world for downloading code
    - to:
      - ipBlock:
          cidr: 0.0.0.0/0
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80

---
# Default deny all traffic for controller and gateway
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "cliscale.fullname" . }}-default-deny-all
  namespace: {{ .Values.namespace }}
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress

---
# Allow controller egress to Kubernetes API
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "cliscale.fullname" . }}-controller-allow-k8s-api
  namespace: {{ .Values.namespace }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: controller
  policyTypes:
    - Egress
  egress:
    - to:
      - ipBlock:
          cidr: 0.0.0.0/0 # This is not ideal, but required for GKE Autopilot
      ports:
        - protocol: TCP
          port: 443

---
# Allow gateway egress to controller and runner pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "cliscale.fullname" . }}-gateway-egress
  namespace: {{ .Values.namespace }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: gateway
  policyTypes:
    - Egress
  egress:
    # Allow DNS
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - protocol: UDP
          port: 53
    # Allow to controller
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: controller
      ports:
        - protocol: TCP
          port: 8080
    # Allow to runner pods
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: {{ include "cliscale.name" . }}-runner
      ports:
        - protocol: TCP
          port: 7681

---
# Allow ingress to controller from GCLB
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "cliscale.fullname" . }}-controller-ingress-gclb
  namespace: {{ .Values.namespace }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: controller
  policyTypes:
    - Ingress
  ingress:
    - from:
      - ipBlock:
          cidr: 130.211.0.0/22
      - ipBlock:
          cidr: 35.191.0.0/16
      ports:
        - protocol: TCP
          port: 8080

---
# Allow ingress to gateway from GCLB
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "cliscale.fullname" . }}-gateway-ingress-gclb
  namespace: {{ .Values.namespace }}
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: gateway
  policyTypes:
    - Ingress
  ingress:
    - from:
      - ipBlock:
          cidr: 130.211.0.0/22
      - ipBlock:
          cidr: 35.191.0.0/16
      ports:
        - protocol: TCP
          port: 8080