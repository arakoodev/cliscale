apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws-cli-controller
  namespace: ws-cli
spec:
  replicas: 2
  selector: { matchLabels: { app: ws-cli-controller } }
  template:
    metadata: { labels: { app: ws-cli-controller } }
    spec:
      serviceAccountName: ws-cli-controller
      containers:
      - name: controller
        image: ${CONTROLLER_IMG}
        imagePullPolicy: IfNotPresent
        env:
          - name: NAMESPACE
            valueFrom: { fieldRef: { fieldPath: metadata.namespace } }
          - name: RUNNER_IMAGE
            value: "${RUNNER_IMG}"
          - name: JOB_TTL_SECONDS
            value: "300"
          - name: JOB_ACTIVE_DEADLINE_SECONDS
            value: "3600"
          # Firebase Admin can use Workload Identity or mount a secret for service account
          - name: SESSION_JWT_SECRET
            valueFrom: { secretKeyRef: { name: session-jwt, key: secret, optional: true } }
        ports: [ { name: http, containerPort: 8080 } ]
        resources:
          requests: { cpu: "100m", memory: "128Mi" }
          limits:   { cpu: "500m", memory: "512Mi" }
---
apiVersion: v1
kind: Service
metadata: { name: ws-cli-controller, namespace: ws-cli }
spec:
  selector: { app: ws-cli-controller }
  ports: [ { name: http, port: 80, targetPort: 8080 } ]
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws-cli-controller
  namespace: ws-cli
  annotations:
    kubernetes.io/ingress.class: "gce"
spec:
  rules:
    - host: ${DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend: { service: { name: ws-cli-controller, port: { number: 80 } } }
