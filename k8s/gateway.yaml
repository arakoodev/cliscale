apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws-cli-gateway
  namespace: ws-cli
spec:
  replicas: 3
  selector: { matchLabels: { app: ws-cli-gateway } }
  template:
    metadata: { labels: { app: ws-cli-gateway } }
    spec:
      containers:
      # Main gateway container
      - name: gateway
        image: ${GATEWAY_IMG}
        imagePullPolicy: IfNotPresent
        env:
          - name: PORT
            value: "8080"
          - name: CONTROLLER_URL
            value: "http://ws-cli-controller.ws-cli.svc.cluster.local"
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: pg
                key: DATABASE_URL
          - name: LOG_LEVEL
            value: "info"
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "1000m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3

      # Cloud SQL Proxy sidecar
      - name: cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.8.0
        args:
          - "--structured-logs"
          - "--port=5432"
          - "$(INSTANCE_CONNECTION_NAME)"
        env:
          - name: INSTANCE_CONNECTION_NAME
            valueFrom:
              configMapKeyRef:
                name: cloudsql
                key: INSTANCE_CONNECTION_NAME
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "200m"
            memory: "128Mi"

---
apiVersion: v1
kind: Service
metadata:
  name: ws-cli-gateway
  namespace: ws-cli
spec:
  selector: { app: ws-cli-gateway }
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ws-cli-gateway
  namespace: ws-cli
  annotations:
    kubernetes.io/ingress.class: "gce"
    cloud.google.com/backend-config: '{"default": "ws-gateway-backendconfig"}'
spec:
  rules:
    - host: ${WS_DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ws-cli-gateway
                port:
                  number: 80

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: ws-gateway-backendconfig
  namespace: ws-cli
spec:
  timeoutSec: 3600
  connectionDraining:
    drainingTimeoutSec: 60
  healthCheck:
    checkIntervalSec: 10
    timeoutSec: 5
    healthyThreshold: 2
    unhealthyThreshold: 3
    type: HTTP
    requestPath: /healthz
    port: 8080
