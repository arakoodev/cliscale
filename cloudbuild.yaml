substitutions:
  _REGION: us-central1
  _LOCATION: us-central1
  _REPO: apps
  _CLUSTER: cli-runner-gke
  _NAMESPACE: ws-cli
  _DOMAIN: ws.example.com
  _WS_DOMAIN: ws-gateway.example.com
  _BASENAME: ws-cli
  _PROFILE: staging  # Can be: dev, staging, production

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: N1_HIGHCPU_8

steps:
# Install Skaffold
- name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  id: install-skaffold
  entrypoint: sh
  args:
  - -c
  - |
    curl -Lo /workspace/skaffold https://storage.googleapis.com/skaffold/releases/v2.10.1/skaffold-linux-amd64
    chmod +x /workspace/skaffold

# Get GKE credentials
- name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  id: get-credentials
  entrypoint: sh
  args:
  - -c
  - |
    gcloud container clusters get-credentials ${_CLUSTER} --region ${_LOCATION}

# Run Skaffold to build and deploy
- name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  id: skaffold-run
  entrypoint: sh
  waitFor: ["install-skaffold", "get-credentials"]
  args:
  - -c
  - |
    /workspace/skaffold run \
      --default-repo=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO} \
      --profile=${_PROFILE} \
      --namespace=${_NAMESPACE} \
      --tag=$SHORT_SHA \
      --set-value domain=${_DOMAIN} \
      --set-value wsDomain=${_WS_DOMAIN}

# Verify deployment
- name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  id: verify-deployment
  entrypoint: sh
  args:
  - -c
  - |
    kubectl -n ${_NAMESPACE} rollout status deploy/cliscale-controller --timeout=5m
    kubectl -n ${_NAMESPACE} rollout status deploy/cliscale-gateway --timeout=5m
    kubectl -n ${_NAMESPACE} get pods
    echo "âœ… Deployment successful!"

# The images are tagged automatically by Skaffold
images:
- ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/controller:$SHORT_SHA
- ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/gateway:$SHORT_SHA
- ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPO}/runner:$SHORT_SHA

timeout: 1800s  # 30 minutes
